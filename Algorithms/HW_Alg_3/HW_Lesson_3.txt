Дано натуральное число N. Выведите слово YES, если число N является точной степенью двойки, или слово NO в противном случае.
Операцией возведения в степень пользоваться нельзя!

Ввод 8
Вывод YES

ВВОД 3
ВыводNO

function isPowerOfTwo(n) {
    if (n <= 0) {
        return "NO";
    }

    while (n % 2 === 0) {
        n = n / 2;
    }

    return n === 1 ? "YES" : "NO";
}

console.log(isPowerOfTwo(8));  // Вывод: YES
console.log(isPowerOfTwo(3));  // Вывод: NO

Дано натуральное число N. Вычислите сумму его цифр.
При решении этой задачи нельзя использовать строки, списки, массивы (ну и циклы, разумеется).

Ввод 179
Вывод 17

985 - 22


function sumOfDigits(n) {
    if (n < 10) {
        return n;
    }
    return n % 10 + sumOfDigits(Math.floor(n / 10));
}

console.log(sumOfDigits(985));  22
console.log(sumOfDigits(179));  17


Напишите рекурсивный метод, который выводит на экран числа Фибоначчи до N-ого элемента.
Напишите рекурсивный метод, который проверяет, является ли строка палиндромом.

function fibonacci(n) {
    if (n === 1 || n === 2) {
        return 1;
    }
    return fibonacci(n - 1) + fibonacci(n - 2);
}

function printFibonacci(n) {
    for (let i = 1; i <= n; i++) {
        console.log(fibonacci(i));
    }
}

printFibonacci(10);


function isPalindrome(str) {
    if (str.length <= 1) {
        return true;
    }
    
    if (str[0] === str[str.length - 1]) {
        return isPalindrome(str.slice(1, str.length - 1));
    }
    
    return false;
}

console.log(isPalindrome("level")); // true
console.log(isPalindrome("hello")); // false
